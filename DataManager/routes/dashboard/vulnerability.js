/**
 * 
 * 		Vulnerability
 * 		/dashboard/vulnerability
 * 		20180723 정종원
 *  
 */

var express = require('express');
var router = express.Router();
var client = require('../../service/es/elasticsearch.js');
var searchFunctions = require('../../service/es/functions/search.js');
var json = require('../../service/utils/json.js');
var common = require('../common.js');

/**
 * 	 위험항목 : 전체
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.post('/countAll', function(req, res, body) {
	
	console.log(req);
	let query = '{"size":0,"query":{"bool":{"should":[{"match":{"vuln_threat.keyword":"Low"}},{"match":{"vuln_threat.keyword":"Medium"}},{"match":{"vuln_threat.keyword":"High"}}]}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.hits.total;
		
		json.addValue(obj, 'count', count);		
		json.addValue(resultObj, 'data', obj);
		res.send(resultObj);
	});
});

/**
 * 		위험항목 : 크리티컬
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.get('/countCritical', function(req, res, body) {
	
	let query = '{"size":0,"query":{"bool":{"must":[{"match":{"vuln_threat.keyword":"High"}}]}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.hits.total;
		
		json.addValue(obj, 'count', count);		
		json.addValue(resultObj, 'data', obj);
		res.send(resultObj);
	});
});


/**
 * 		호스트 별 취약점 개수
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.get('/countPerHost', function(req, res, body) {
	
	let query = '{"size":0,"query":{"bool":{"should":[{"match":{"vuln_threat.keyword":"Low"}},{"match":{"vuln_threat.keyword":"Medium"}},{"match":{"vuln_threat.keyword":"High"}}]}},"aggs":{"group_by_host":{"terms":{"field":"host.keyword","size":5}}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.aggregations.group_by_host.buckets.length;
		let value = resp.aggregations.group_by_host.buckets;
		let arr = new Array();
		
		for(let i = 0; i < count; i++) {
			
			arr.push(value[i]);
		}
		
		json.addValue(resultObj, 'data', arr);
		res.send(resultObj);
	});
});

/**
 * 		타겟 호스트 별 취약점 개수
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.get('/countPerVulnHost', function(req, res, body) {
	
	let query = '{"size":0,"query":{"bool":{"should":[{"match":{"vuln_threat.keyword":"Low"}},{"match":{"vuln_threat.keyword":"Medium"}},{"match":{"vuln_threat.keyword":"High"}}]}},"aggs":{"group_by_vulnHost":{"terms":{"field":"vuln_host.keyword","size":5}}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.aggregations.group_by_vulnHost.buckets.length;
		let value = resp.aggregations.group_by_vulnHost.buckets;
		let arr = new Array();
		
		for(let i = 0; i < count; i++) {
			
			arr.push(value[i]);
		}
		
		json.addValue(resultObj, 'data', arr);
		res.send(resultObj);
	});
});


/**
 * 		타겟 포트 별 취약점 개수
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.get('/countPerVulnPort', function(req, res, body) {
	
	let query = '{"size":0,"query":{"bool":{"should":[{"match":{"vuln_threat.keyword":"Low"}},{"match":{"vuln_threat.keyword":"Medium"}},{"match":{"vuln_threat.keyword":"High"}}]}},"aggs":{"group_by_vulnPort":{"terms":{"field":"vuln_port.keyword","size":5}}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.aggregations.group_by_vulnPort.buckets.length;
		let value = resp.aggregations.group_by_vulnPort.buckets;
		let arr = new Array();
		
		for(let i = 0; i < count; i++) {
			
			arr.push(value[i]);
		}
		
		json.addValue(resultObj, 'data', arr);
		res.send(resultObj);
	});
});

/**
 * 		등급 별 취약점 개수
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.get('/countPerVulnThreat', function(req, res, body) {
	
	let query = '{"size":0,"query":{"bool":{"should":[{"match":{"vuln_threat.keyword":"Low"}},{"match":{"vuln_threat.keyword":"Medium"}},{"match":{"vuln_threat.keyword":"High"}}]}},"aggs":{"group_by_vulnThreat":{"terms":{"field":"vuln_threat.keyword","size":5}}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.aggregations.group_by_vulnThreat.buckets.length;
		let value = resp.aggregations.group_by_vulnThreat.buckets;
		let arr = new Array();
		
		for(let i = 0; i < count; i++) {
			
			arr.push(value[i]);
		}
		
		json.addValue(resultObj, 'data', arr);
		res.send(resultObj);
	});
});

/**
 * 		NVT 별 취약점 개수
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.get('/countPerVulnNVT', function(req, res, body) {
	
	let query = '{"size":0,"query":{"bool":{"should":[{"match":{"vuln_threat.keyword":"Low"}},{"match":{"vuln_threat.keyword":"Medium"}},{"match":{"vuln_threat.keyword":"High"}}]}},"aggs":{"group_by_vulnNVT":{"terms":{"field":"vuln_nvt_family.keyword","size":5}}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.aggregations.group_by_vulnNVT.buckets.length;
		let value = resp.aggregations.group_by_vulnNVT.buckets;
		let arr = new Array();
		
		for(let i = 0; i < count; i++) {
			
			arr.push(value[i]);
		}
		
		json.addValue(resultObj, 'data', arr);
		res.send(resultObj);
	});
});

/**
 * 		CVE 별 취약점 개수
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.get('/countPerCVE', function(req, res, body) {
	
	let query = '{"size":0,"query":{"bool":{"should":[{"match":{"vuln_threat.keyword":"Low"}},{"match":{"vuln_threat.keyword":"Medium"}},{"match":{"vuln_threat.keyword":"High"}}]}},"aggs":{"group_by_vulnCVE":{"terms":{"field":"vuln_nvt_cve.keyword","size":5}}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.aggregations.group_by_vulnCVE.buckets.length;
		let value = resp.aggregations.group_by_vulnCVE.buckets;
		let arr = new Array();
		
		for(let i = 0; i < count; i++) {
			
			arr.push(value[i]);
		}
		
		json.addValue(resultObj, 'data', arr);
		res.send(resultObj);
	});
});

/**
 * 		취약점 이름별 취약점 개수
 * @param req
 * @param res
 * @param body
 * @returns
 */
router.get('/countPerVulnName', function(req, res, body) {
	
	let query = '{"size":0,"query":{"bool":{"should":[{"match":{"vuln_threat.keyword":"Low"}},{"match":{"vuln_threat.keyword":"Medium"}},{"match":{"vuln_threat.keyword":"High"}}]}},"aggs":{"group_by_vulnName":{"terms":{"field":"vuln_name.keyword","size":5}}},"post_filter":{"range":{"@timestamp":{"gte":"now-1y","lte":"now"}}}}';
	let resultObj = json.createErrObject('0');
	let obj = json.createJsonObject();
	
	common.setHeader(res);
	searchFunctions.freeQuery(client, 'vuln-scan-ewp-*', query, function(resp) {
		
		let count = resp.aggregations.group_by_vulnName.buckets.length;
		let value = resp.aggregations.group_by_vulnName.buckets;
		let arr = new Array();
		
		for(let i = 0; i < count; i++) {
			
			arr.push(value[i]);
		}
		
		json.addValue(resultObj, 'data', arr);
		res.send(resultObj);
	});
});

module.exports = router;